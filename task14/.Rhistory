wmurders
library(fpp)
library(knitr)
library(fpp)
library(knitr)
wmurders
data=wmurders
tsdisplay(data, plot.type="scatter")
lambda = BoxCox.lambda(data)                        #randamas lambda
trdiff = BoxCox(data,lambda = lambda)
tsdisplay(trdiff, plot.type="scatter")
B
lambda = BoxCox.lambda(data)                        #randamas lambda
lambda
data
tsdisplay(data, plot.type="scatter")
auto.arima(data)
?auto.arima
data=wmurders
tsdisplay(data, plot.type="scatter")
nd <- ndiffs(data)                                #diferencijuojama, jei trendas yra
nd
trdiff <- diff(data,differences=nd)
nd <- ndiffs(data)                                #diferencijuojama, jei trendas yra
diff <- diff(data,differences=nd)
diff
tsdisplay(diff, plot.type="scatter")
lambda = BoxCox.lambda(data)                        #randamas lambda
trdiff = BoxCox(data,lambda = lambda)
tsdisplay(trdiff, plot.type="scatter")
data=wmurders
lambda = BoxCox.lambda(data)                        #randamas lambda
trdiff = BoxCox(data,lambda = lambda)
tsdisplay(trdiff, plot.type="scatter")
lambda = BoxCox.lambda(data)                        #randamas lambda
tr = BoxCox(data,lambda = lambda)
tsdisplay(tr, plot.type="scatter")
tsdisplay(data, plot.type="scatter")
tsdisplay(tr, plot.type="scatter")
nd <- ndiffs(tr)                                #diferencijuojama, jei trendas yra
diff <- diff(tr,differences=nd)
tsdisplay(diff, plot.type="scatter")
data=wmurders
tsdisplay(data, plot.type="scatter")
lambda = BoxCox.lambda(data)                        #randamas lambda
tr = BoxCox(data,lambda = lambda)
tsdisplay(tr, plot.type="scatter")
data=wmurders
tsdisplay(data, plot.type="scatter")
lambda = BoxCox.lambda(data)                        #randamas lambda
transformuota = BoxCox(data,lambda = lambda)
tsdisplay(transformuota, plot.type="scatter")
nd <- ndiffs(transformuota)                                #diferencijuojama, jei trendas yra
trdiff <- diff(transformuota,differences=nd)
tsdisplay(trdiff, plot.type="scatter")
trdiff <- diff(transformuota,differences=nd)
tsdisplay(trdiff, plot.type="scatter")
auto.arima(transformuota)
auto.arima(trdiff)
library(fpp)
library(knitr)
data=wmurders
tsdisplay(data, plot.type="scatter")
lambda = BoxCox.lambda(data)                        #randamas lambda
transformuota = BoxCox(data,lambda = lambda)
tsdisplay(transformuota, plot.type="scatter")
nd <- ndiffs(transformuota)                         #diferencijuojama
trdiff <- diff(transformuota,differences=nd)
tsdisplay(trdiff, plot.type="scatter")
data=wmurders
tsdisplay(data, plot.type="scatter")
auto.arima(data)
pacf(data)
acf(data)
pacf(data)
auto.arima(data)
acf(data)
